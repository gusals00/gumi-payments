openapi: 3.0.0
servers:
  - url: 'http://localhost:8080'
info:
  description: payments 컨트롤러
  version: 1.0.0
  title: payments
  license:
    name: Apache-2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: payments
    description: 결제
paths: # 아래로 API Path를 명시한다
  '/api/payments/key-test': # /test API에 대한 명세
    get: # HTTP get Method를 사용한다.
      operationId: paymentsApiKeyTest
      tags:
        - payments
      summary: API 키(시크릿 키) 사용 예시 # 설명
      # api key basic 인증
      security:
        - basicAuth: []

      # api 키 확인 어노테이션
      x-api-key-check-annotation: "@flab.gumipayments.infrastructure.apikey.AuthenticatedApiKey"
      responses:
        '200': # HTTP Status Code
          description: 요청 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyUseResponse'
        '401':
          description: "API 키 인증 실패"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  '/api/payments/request':
    post: # HTTP get Method를 사용한다.
      operationId: processPaymentRequest
      tags:
        - payments
      summary: 결제 요청 # 설명
      security:
        - basicAuth: []

      # api 키 확인 어노테이션
      x-api-key-check-annotation: "@flab.gumipayments.infrastructure.apikey.AuthenticatedApiKey"

      requestBody:
        description: '결제 요청 requestBody'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'

      responses:
        '200': # HTTP Status Code
          description: '결제 요청 responseBody'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentProcessResponse'

  '/api/payments/accept':
    get: # HTTP get Method를 사용한다.
      operationId: acceptPaymentRequest
      tags:
        - payments
      summary: 결제 수단 인증 # 설명
      security:
        - basicAuth: []
      parameters:
        - in: query
          name: key
          required: true
          description: "UUID 값"
          schema:
            type: string
        - in: query
          name: paymentKey
          required: true
          description: "paymentKey"
          schema:
            type: string
        - in: query
          name: isSuccess
          required: true
          description: "인증 성공 여부"
          schema:
            type: boolean
      responses:
        '200': # HTTP Status Code
          description: '결제 요청 responseBody(성공, 실패 리다이렉트 url 전달)'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectResponse'
  '/api/payments/confirm':
    post: # HTTP get Method를 사용한다.
      operationId: confirmPayment
      tags:
        - payments
      summary: 결제 승인 # 설명
      # basic 인증
      security:
        - basicAuth: []
      # api 키 확인 어노테이션
      x-api-key-check-annotation: "@flab.gumipayments.infrastructure.apikey.AuthenticatedApiKey"
      parameters:
        - in: header
          name: idempotencyKey
          schema:
            type: string
      requestBody:
        description: '결제 승인 requestBody'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/paymentConfirmRequest'


      responses:
        '200': # HTTP Status Code
          description: "결제 승인 responseBody"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/paymentConfirmResponse'

components:
  securitySchemes:
    basicAuth:
      description: "Basic base64({SECRET_API_KEY}:) 형식으로 넣어주세요."
      type: http
      scheme: basic

  schemas:
    PaymentRequest:
      type: object
      title: 'PaymentRequest'
      description: "결제 요청 requestBody"
      properties:
        orderId:
          type: string
          example: "we@#@sqqq11"
          description: "주문 ID"
        orderName:
          type: string
          example: "생수 외 1"
          description: "주문 상품 이름"
        customerEmail:
          type: string
          example: "lovewew@naver.com"
          description: "주문자 이메일"
          pattern: '^[a-zA-Z0-9+-\_.]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$'
        customerName:
          type: string
          example: "성호창"
          description: "주문자 이름"
        amount:
          type: integer
          format: int64
          example: "50000"
          description: "결제 금액"
        cardCompany:
          type: string
          example: "국민 카드, 농협 카드 ..."
          description: "카드 이름"
        successUrl:
          type: string
          example: "127.0.0.1:8080/success"
          description: "인증 성공시 리다이렉트 url"
        failUrl:
          type: string
          example: "127.0.0.1:8080/fail"
          description: "인증 실패시 리다이렉트 url"
    paymentConfirmRequest:
      type: object
      title: 'paymentConfirmRequest'
      description: "결제 승인 requestBody"
      properties:
        paymentKey:
          type: string
          example: 'sdfsef232@112'
          description: 'payment 키'
        orderId:
          type: string
          example: "we@#@sqqq11"
          description: "주문 ID"
        amount:
          type: integer
          format: int64
          example: "50000"
          description: "결제 금액"

    ErrorResponse:
      type: object
      title: "errorResponse"
      description: "예외"
      properties:
        code:
          type: string
          description: "예외 코드"
        message:
          type: string
          description: "예외 메시지"
    ApiKeyUseResponse:
      type: object
      title: 'ApiKeyUseResponse'
      description: 'API 키 사용 예시'
      properties: # 필드값
        id:
          type: integer
          format: int64
          example: 1
          description: "api key id"
        apiKeyType:
          type: string
          example: "PROD"
          description: "api key 타입(PROD/TEST)"
    PaymentProcessResponse:
      type: object
      title: 'paymentProcessResponse'
      description: '결제 요청 응답'
      properties:
        paymentUrl:
          type: string
          example: 'sinhan/sdfw/sdf'
          description: '결제창 url(결제 인증사가 제공하는 결제창 URL)'
    RedirectResponse:
      type: object
      title: 'RedirectResponse'
      description: 'redirectUrlResponse'
      properties:
        redirectUrl:
          type: string
          example: 'sinhan/sdfw/sdf'
          description: '리다이렉트 url'

    Card:
      type: object
      title: '카드'
      description: "카드 정보"
      properties:
        issuerCode:
          type: integer
          example: "001"
          description: '발급사 코드'
        amount:
          type: integer
          format: int64
          example: "6000"
          description: "카드사에서 결제한 금액"
        number:
          type: string
          example: '23452345'
          description: '카드 번호'
        approveNo:
          type: string
          example: 'dsfwf132'
          description: '카드사 승인 번호'
        cardType:
          type: string
          example: 'check_card'
          description: '카드 종류(체크, 신용 ...)'

    paymentConfirmResponse:
      type: object
      title: 'paymentConfirmResponse'
      description: '결제 승인 응답'
      properties:
        paymentKey:
          type: string
          example: 'sdfsef232@112'
          description: 'payment 키'
        method:
          type: string
          example: "CARD"
          description: "결제 수단"
        orderId:
          type: string
          example: "we@#@sqqq11"
          description: "주문 ID"
        orderName:
          type: string
          example: "생수 외 1"
          description: "주문 상품 이름"
        status:
          type: string
          example: "DONE"
          description: "결제 상태"
        requestAt:
          type: string
          format: date-time
          example: "2021-01-30T08:30:00Z"
          description: "결제 생성 시간"
        approvedAt:
          type: string
          format: date-time
          example: "2021-01-30T08:31:00Z"
          description: "결제 승인 시간"
        card:
          $ref: '#/components/schemas/Card'
        totalAmount:
          type: integer
          format: int64
          example: "60000"
          description: '총 결제 금액'
        balanceAmount:
          type: integer
          format: int64
          example: "50000"
          description: '취소할 수 있는 금액(잔고)'
        lastTransactionKey:
          type: string
          example: "sdfw@#232sss"
          description: '마지막 거래 키'
        cancels:
          type: array
          items:
            type: object
            properties:
              transactionKey:
                type: string
                example: "sdfw@#232sss"
                description: '거래 키'
              cancelReason:
                type: string
                example: "고객 변심"
                description: '취소 사유'
              canceledAt:
                type: string
                format: date-time
                example: '2021-01-30T08:30:00Z'
                description: '취소 일시'
              cancelAmount:
                type: integer
                format:  int64
                example: '10000'
                description: '취소 금액'
              refundableAmount:
                type: integer
                format: int64
                example: '50000'
                description: '환불 가능 금액'